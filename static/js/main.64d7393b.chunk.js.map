{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","setCurrentPage","pages","i","Math","ceil","length","push","funcVisibleItems","items","current","splice","defaultVisibleItem","useState","visibleItems","setVisibleItems","useEffect","className","classNames","disabled","href","onClick","map","page","active","item","from","to","numbers","n","getNumbers","App","setPerPage","min","id","value","onChange","e","target","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"2NAUaA,EAAwC,SAAC,GAQpD,IAHK,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,eAEMC,EAAQ,GAELC,EAAI,EAAGA,GAAKC,KAAKC,KAAKP,EAAMQ,QAAUP,GAAUI,GAAK,EAC5DD,EAAMK,KAAKJ,GAGb,IAAMK,EAAmB,SAACC,EAAgBC,GACxC,OAAQ,YAAID,GAAOE,QAAQZ,GAAWW,GAAWX,GAAUA,IAGvDa,EAAqBJ,EAAiBV,GAAQE,GACpD,EAAwCa,mBAASD,GAAjD,mBAAOE,EAAP,KAAqBC,EAArB,KAMA,OAJAC,qBAAU,WACRD,EAAgBP,EAAiBV,GAAQE,MACxC,CAACD,IAGF,qCACE,qBAAIkB,UAAU,aAAd,UACE,oBAAIA,UAAWC,IACb,YACA,CAAEC,SAA2B,KAAhBnB,IAFf,SAKE,mBACE,UAAQ,WACRiB,UAAU,YACVG,KAAK,QACL,gBAAc,OACdC,QAAS,kBAAMpB,EAAe,GAAD,QAAKD,EAAc,KALlD,oBAWDE,EAAMoB,KAAI,SAAAC,GAAI,OACb,oBAAIN,UAAWC,IACb,YACA,CAAEM,OAAQD,KAAUvB,IAFtB,SAKE,mBACE,UAAQ,WACRiB,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,WACPpB,EAAe,GAAD,OAAIsB,IAClBR,EAAgBP,EAAiBV,EAAOyB,KAN5C,SASGA,SAKP,oBACEN,UAAWC,IACT,YACA,CAAEC,SAAUf,KAAKC,KAAKP,EAAMQ,QAAUP,MAAcC,IAHxD,SAME,mBACE,UAAQ,WACRiB,UAAU,YACVG,KAAK,QACL,gBAAc,QACdC,QAAS,kBAAMpB,EAAe,GAAD,QAAKD,EAAc,KALlD,uBAWJ,6BACGc,EAAaQ,KAAI,SAAAG,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAAoBA,aCrFxBhB,ECNC,SAAoBiB,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQrB,KAAKsB,GAGf,OAAOD,EDDKE,CAAW,EAAG,IACzBR,KAAI,SAAAO,GAAC,qBAAYA,MAEPE,EAAgB,WAC3B,MAA8BlB,mBAAS,KAAvC,mBAAOd,EAAP,KAAgBiC,EAAhB,KACA,EAAsCnB,mBAAS,KAA/C,mBAAOb,EAAP,KAAoBC,EAApB,KAEA,OACE,sBAAKgB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,kCACqBlB,GAAWC,GAAeD,EAAU,EADzD,cACgEK,KAAK6B,KAAKjC,GAAeD,EAASU,EAAMH,QADxG,aAIA,sBAAKW,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRiB,GAAG,kBACHjB,UAAU,eACVkB,MAAOpC,EACPqC,SAAU,SAAAC,GACRL,EAAWK,EAAEC,OAAOH,OACpBlC,EAAe,MAPnB,UAUE,wBAAQkC,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkBtB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEnB,MAAOW,EACPV,QAASA,EACTC,YAAaA,EACbC,eAAgBA,QE9CxBuC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.64d7393b.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React, { useState, useEffect } from 'react';\n\ntype PaginationProps = {\n  total:string[];\n  perPage:string\n  currentPage:string\n  setCurrentPage:React.Dispatch<React.SetStateAction<string>>;\n};\n\nexport const Pagination: React.FC<PaginationProps> = ({\n  total,\n  perPage,\n  currentPage,\n  setCurrentPage,\n}) => {\n  const pages = [];\n\n  for (let i = 1; i <= Math.ceil(total.length / +perPage); i += 1) {\n    pages.push(i);\n  }\n\n  const funcVisibleItems = (items:string[], current:number) => {\n    return ([...items].splice(+perPage * +current - +perPage, +perPage));\n  };\n\n  const defaultVisibleItem = funcVisibleItems(total, +currentPage);\n  const [visibleItems, setVisibleItems] = useState(defaultVisibleItem);\n\n  useEffect(() => {\n    setVisibleItems(funcVisibleItems(total, +currentPage));\n  }, [perPage]);\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={classNames(\n          'page-item',\n          { disabled: +currentPage === 1 },\n        )}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled=\"true\"\n            onClick={() => setCurrentPage(`${+currentPage - 1}`)}\n          >\n            «\n          </a>\n        </li>\n\n        {pages.map(page => (\n          <li className={classNames(\n            'page-item',\n            { active: page === +currentPage },\n          )}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${page}`}\n              onClick={() => {\n                setCurrentPage(`${page}`);\n                setVisibleItems(funcVisibleItems(total, page));\n              }}\n            >\n              {page}\n            </a>\n          </li>\n        ))}\n\n        <li\n          className={classNames(\n            'page-item',\n            { disabled: Math.ceil(total.length / +perPage) === +currentPage },\n          )}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled=\"false\"\n            onClick={() => setCurrentPage(`${+currentPage + 1}`)}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      <ul>\n        {visibleItems.map(item => (\n          <li data-cy=\"item\">{item}</li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState('5');\n  const [currentPage, setCurrentPage] = useState('1');\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page 1 (items ${+perPage * +currentPage - +perPage + 1} - ${Math.min(+currentPage * +perPage, items.length)} of 42)`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={e => {\n              setPerPage(e.target.value);\n              setCurrentPage('1');\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items}\n        perPage={perPage}\n        currentPage={currentPage}\n        setCurrentPage={setCurrentPage}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}